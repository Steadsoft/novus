//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.11.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from nores.g4 by ANTLR 4.11.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="InoresListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.11.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class noresBaseListener : InoresListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProg([NotNull] noresParser.ProgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.prog"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProg([NotNull] noresParser.ProgContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] noresParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] noresParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssign_stmt([NotNull] noresParser.Assign_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.assign_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssign_stmt([NotNull] noresParser.Assign_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReference([NotNull] noresParser.ReferenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReference([NotNull] noresParser.ReferenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments([NotNull] noresParser.ArgumentsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.arguments"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments([NotNull] noresParser.ArgumentsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.arguments_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArguments_list([NotNull] noresParser.Arguments_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.arguments_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArguments_list([NotNull] noresParser.Arguments_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.basic_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasic_reference([NotNull] noresParser.Basic_referenceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.basic_reference"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasic_reference([NotNull] noresParser.Basic_referenceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.structure_qualification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructure_qualification([NotNull] noresParser.Structure_qualificationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.structure_qualification"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructure_qualification([NotNull] noresParser.Structure_qualificationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.structure_qualification_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStructure_qualification_list([NotNull] noresParser.Structure_qualification_listContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.structure_qualification_list"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStructure_qualification_list([NotNull] noresParser.Structure_qualification_listContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] noresParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] noresParser.SubscriptContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.subscript_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript_commalist([NotNull] noresParser.Subscript_commalistContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.subscript_commalist"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript_commalist([NotNull] noresParser.Subscript_commalistContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] noresParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] noresParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_9"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_9([NotNull] noresParser.Expression_9Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_9"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_9([NotNull] noresParser.Expression_9Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_8([NotNull] noresParser.Expression_8Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_8"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_8([NotNull] noresParser.Expression_8Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_7"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_7([NotNull] noresParser.Expression_7Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_7"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_7([NotNull] noresParser.Expression_7Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_6([NotNull] noresParser.Expression_6Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_6"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_6([NotNull] noresParser.Expression_6Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_5([NotNull] noresParser.Expression_5Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_5"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_5([NotNull] noresParser.Expression_5Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_4([NotNull] noresParser.Expression_4Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_4"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_4([NotNull] noresParser.Expression_4Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_3([NotNull] noresParser.Expression_3Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_3"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_3([NotNull] noresParser.Expression_3Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_2([NotNull] noresParser.Expression_2Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_2"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_2([NotNull] noresParser.Expression_2Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.expression_1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_1([NotNull] noresParser.Expression_1Context context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.expression_1"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_1([NotNull] noresParser.Expression_1Context context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.prefix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_expression([NotNull] noresParser.Prefix_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.prefix_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_expression([NotNull] noresParser.Prefix_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.parenthesized_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesized_expression([NotNull] noresParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.parenthesized_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesized_expression([NotNull] noresParser.Parenthesized_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.primitive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimitive_expression([NotNull] noresParser.Primitive_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.primitive_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimitive_expression([NotNull] noresParser.Primitive_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstant([NotNull] noresParser.ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstant([NotNull] noresParser.ConstantContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.prefix_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefix_operator([NotNull] noresParser.Prefix_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.prefix_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefix_operator([NotNull] noresParser.Prefix_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison_operator([NotNull] noresParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.comparison_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison_operator([NotNull] noresParser.Comparison_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] noresParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] noresParser.IdentifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] noresParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] noresParser.KeywordContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.keyword_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword_stmt([NotNull] noresParser.Keyword_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.keyword_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword_stmt([NotNull] noresParser.Keyword_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.call_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCall_stmt([NotNull] noresParser.Call_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.call_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCall_stmt([NotNull] noresParser.Call_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.goto_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoto_stmt([NotNull] noresParser.Goto_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.goto_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoto_stmt([NotNull] noresParser.Goto_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.end_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnd_stmt([NotNull] noresParser.End_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.end_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnd_stmt([NotNull] noresParser.End_stmtContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="noresParser.procedure_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProcedure_stmt([NotNull] noresParser.Procedure_stmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="noresParser.procedure_stmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProcedure_stmt([NotNull] noresParser.Procedure_stmtContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
